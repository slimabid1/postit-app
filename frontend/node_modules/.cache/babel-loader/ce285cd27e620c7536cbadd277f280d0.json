{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Slim\\\\Desktop\\\\postit-project\\\\postit-app\\\\frontend\\\\src\\\\components\\\\postits-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PostitsDataService from \"../services/show-postits\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostitsList = props => {\n  _s();\n\n  const [postits, setPostits] = useState([]);\n  const [postit, setPostit] = useState([]); //Retrieve all postits to display them client side\n\n  const retrieveAllPostits = props => {\n    PostitsDataService.getAll().then(response => {\n      //Getting the data requested from the server and setting them into the client\n      setPostits(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    retrieveAllPostits();\n  }, []); // //Retrieve one postit\n  // const retrieveOnePostit = (id) => {\n  //   PostitsDataService.get(id)\n  //     .then((response) => {\n  //       setPostit(response.data._id);\n  //       console.log(response.data.id);\n  //     })\n  //     .catch((e) => {\n  //       console.log(e);\n  //     });\n  // };\n  // useEffect(() => {\n  //   retrieveOnePostit();\n  // }, [props.match.params.id]);\n\n  const deletePostit = postitId => {\n    PostitsDataService.deletePostit(postitId).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const editPostit = (data, postitId) => {\n    PostitsDataService.updatePostit(data, postitId).catch(e => {\n      console.log(e);\n    });\n  }; //HANDELING CHANGES\n\n\n  let initialPostitStateTitle = \"\";\n  let initialPostitStateContent = \"\";\n  let initialPostitStateDeadline = \"\";\n  let editing = false;\n\n  if (props.location.state && props.location.state.currentPostit) {\n    editing = true;\n    initialPostitStateTitle = props.location.state.currentPostit.title;\n    initialPostitStateContent = props.location.state.currentPostit.content;\n    initialPostitStateDeadline = props.location.state.currentPostit.deadline;\n  }\n\n  const [postitTitle, setPostitTitle] = useState(initialPostitStateTitle);\n  const [postitContent, setPostitContent] = useState(initialPostitStateContent);\n  const [postitDeadline, setPostitDeadline] = useState(initialPostitStateDeadline);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = event => {\n    setPostitTitle(event.target.value);\n    setPostitContent(event.target.value);\n    setPostitDeadline(event.target.value);\n  };\n\n  const savePostit = () => {\n    var data = {\n      title: postitTitle,\n      content: postitContent,\n      deadline: postitDeadline\n    };\n\n    if (editing) {\n      data.postit_id = props.state.currentPostit._id;\n      PostitsDataService.updatePostit(data).then(response => {\n        setSubmitted(true);\n        console.log(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    } else {\n      PostitsDataService.createPostit(data).then(response => {\n        setSubmitted(true);\n        console.log(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: //Mapping the data retrieved to the key postits and then display it\n    postits.map((postit, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-4 pb-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: postit.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Content: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this), postit.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Deadline: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this), postit.deadline]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => deletePostit(postit._id),\n                className: \"btn btn-primary col-lg-5 mx-1 mb-1\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: () => editPostit(),\n                  className: \"btn btn-primary col-lg-5 mx-1 mb-1\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostitsList, \"+nhN2Op0MXhYHK5zqKs137jI0sI=\");\n\n_c = PostitsList;\nexport default PostitsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostitsList\");","map":{"version":3,"sources":["C:/Users/Slim/Desktop/postit-project/postit-app/frontend/src/components/postits-list.js"],"names":["React","useState","useEffect","PostitsDataService","Link","PostitsList","props","postits","setPostits","postit","setPostit","retrieveAllPostits","getAll","then","response","data","catch","e","console","log","deletePostit","postitId","editPostit","updatePostit","initialPostitStateTitle","initialPostitStateContent","initialPostitStateDeadline","editing","location","state","currentPostit","title","content","deadline","postitTitle","setPostitTitle","postitContent","setPostitContent","postitDeadline","setPostitDeadline","submitted","setSubmitted","handleInputChange","event","target","value","savePostit","postit_id","_id","createPostit","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PostitsDataService from \"../services/show-postits\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PostitsList = (props) => {\r\n  const [postits, setPostits] = useState([]);\r\n  const [postit, setPostit] = useState([]);\r\n\r\n  //Retrieve all postits to display them client side\r\n  const retrieveAllPostits = (props) => {\r\n    PostitsDataService.getAll()\r\n      .then((response) => {\r\n        //Getting the data requested from the server and setting them into the client\r\n        setPostits(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveAllPostits();\r\n  }, []);\r\n\r\n  // //Retrieve one postit\r\n  // const retrieveOnePostit = (id) => {\r\n  //   PostitsDataService.get(id)\r\n  //     .then((response) => {\r\n  //       setPostit(response.data._id);\r\n  //       console.log(response.data.id);\r\n  //     })\r\n  //     .catch((e) => {\r\n  //       console.log(e);\r\n  //     });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   retrieveOnePostit();\r\n  // }, [props.match.params.id]);\r\n\r\n  const deletePostit = (postitId) => {\r\n    PostitsDataService.deletePostit(postitId).catch((e) => {\r\n      console.log(e);\r\n    });\r\n  };\r\n\r\n  const editPostit = (data, postitId) => {\r\n    PostitsDataService.updatePostit(data, postitId).catch((e) => {\r\n      console.log(e);\r\n    });\r\n  };\r\n\r\n  //HANDELING CHANGES\r\n\r\n  let initialPostitStateTitle = \"\";\r\n  let initialPostitStateContent = \"\";\r\n  let initialPostitStateDeadline = \"\";\r\n  let editing = false;\r\n\r\n  if (props.location.state && props.location.state.currentPostit) {\r\n    editing = true;\r\n    initialPostitStateTitle = props.location.state.currentPostit.title;\r\n    initialPostitStateContent = props.location.state.currentPostit.content;\r\n    initialPostitStateDeadline = props.location.state.currentPostit.deadline;\r\n  }\r\n\r\n  const [postitTitle, setPostitTitle] = useState(initialPostitStateTitle);\r\n  const [postitContent, setPostitContent] = useState(initialPostitStateContent);\r\n  const [postitDeadline, setPostitDeadline] = useState(\r\n    initialPostitStateDeadline\r\n  );\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    setPostitTitle(event.target.value);\r\n    setPostitContent(event.target.value);\r\n    setPostitDeadline(event.target.value);\r\n  };\r\n\r\n  const savePostit = () => {\r\n    var data = {\r\n      title: postitTitle,\r\n      content: postitContent,\r\n      deadline: postitDeadline,\r\n    };\r\n\r\n    if (editing) {\r\n      data.postit_id = props.state.currentPostit._id;\r\n      PostitsDataService.updatePostit(data)\r\n        .then((response) => {\r\n          setSubmitted(true);\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    } else {\r\n      PostitsDataService.createPostit(data).then((response) => {\r\n        setSubmitted(true);\r\n        console.log(response.data);\r\n      }).catch( e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      {\r\n        //Mapping the data retrieved to the key postits and then display it\r\n        postits.map((postit, index) => {\r\n          return (\r\n            <div className=\"col-lg-4 pb-1\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{postit.title}</h5>\r\n                  <p className=\"card-text\">\r\n                    <strong>Content: </strong>\r\n                    {postit.content}\r\n                    <br />\r\n                    <strong>Deadline: </strong>\r\n                    {postit.deadline}\r\n                  </p>\r\n                  <div className=\"row\">\r\n                    <a\r\n                      onClick={() => deletePostit(postit._id)}\r\n                      className=\"btn btn-primary col-lg-5 mx-1 mb-1\"\r\n                    >\r\n                      Delete\r\n                    </a>\r\n                    <div className=\"row\">\r\n                      <a\r\n                        onClick={() => editPostit()}\r\n                        className=\"btn btn-primary col-lg-5 mx-1 mb-1\"\r\n                      >\r\n                        Edit\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostitsList;\r\n"]},"metadata":{},"sourceType":"module"}