{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Slim\\\\Desktop\\\\postit-project\\\\postit-app\\\\frontend\\\\src\\\\components\\\\edit-postit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PostitsDataService from \"../services/show-postits\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPostit = props => {\n  _s();\n\n  let initialPostitStateId = \"\";\n  let initialPostitStateTitle = \"\";\n  let initialPostitStateContent = \"\";\n  let initialPostitStateDeadline = \"\";\n\n  if (props.location.state && props.location.state.currentPostit) {\n    initialPostitStateId = props.location.state.currentPostit._id;\n    initialPostitStateTitle = props.location.state.currentPostit.title;\n    initialPostitStateContent = props.location.state.currentPostit.content;\n    initialPostitStateDeadline = props.location.state.currentPostit.deadline;\n  }\n\n  const [postitId, setPostitId] = useState(initialPostitStateId);\n  const [postitTitle, setPostitTitle] = useState(initialPostitStateTitle);\n  const [postitContent, setPostitContent] = useState(initialPostitStateContent);\n  const [postitDeadline, setPostitDeadline] = useState(initialPostitStateDeadline);\n  const [submitted, setSubmitted] = useState(false); // const handleInputId = (event) => {\n  //   setPostitId(event.target.value);\n  // };\n\n  const handleInputTitle = event => {\n    setPostitTitle(event.target.value);\n  };\n\n  const handleInputContent = event => {\n    setPostitContent(event.target.value);\n  };\n\n  const handleInputDeadline = event => {\n    setPostitDeadline(event.target.value);\n  }; // const getPostitId = (id) => {\n  //   PostitsDataService.get(id)\n  //     .then((response) => {\n  //       //Getting the data requested from the server and setting them into the client\n  //       setPostitId(response.data);\n  //       console.log(\"ANY ID ? ====>\" + response.data);\n  //       return (response.data);\n  //     })\n  //     .catch((e) => {\n  //       console.log(e);\n  //     });\n  // };\n  // useEffect(() => {\n  //   getPostitId(props.match.params.id);\n  // }, [props.match.params.id]);\n\n\n  const savePostit = () => {\n    var data = {\n      title: initialPostitStateTitle,\n      content: initialPostitStateContent,\n      deadline: initialPostitStateDeadline\n    }; // data.postit_id = props.state.currentPostit._id;\n    //console.log(\"=================>\" + data.postit_id);\n\n    data.postit_id = props.state.currentPostit.postit_id;\n    PostitsDataService.updatePostit(data).then(response => {\n      setSubmitted(true);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"submit-form\",\n    children: submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"You submitted successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"title\",\n          required: true,\n          value: postitTitle,\n          onChange: handleInputTitle,\n          name: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"content\",\n          required: true,\n          value: postitContent,\n          onChange: handleInputContent,\n          name: \"content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"deadline\",\n          required: true,\n          value: postitDeadline,\n          onChange: handleInputDeadline,\n          name: \"deadline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"btn btn-success\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: savePostit,\n          className: \"btn btn-success\",\n          to: \"/\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPostit, \"ih7aXj5nZyqKMcNeeWy3LlrIfwY=\");\n\n_c = EditPostit;\nexport default EditPostit;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPostit\");","map":{"version":3,"sources":["C:/Users/Slim/Desktop/postit-project/postit-app/frontend/src/components/edit-postit.js"],"names":["React","useState","useEffect","PostitsDataService","Link","EditPostit","props","initialPostitStateId","initialPostitStateTitle","initialPostitStateContent","initialPostitStateDeadline","location","state","currentPostit","_id","title","content","deadline","postitId","setPostitId","postitTitle","setPostitTitle","postitContent","setPostitContent","postitDeadline","setPostitDeadline","submitted","setSubmitted","handleInputTitle","event","target","value","handleInputContent","handleInputDeadline","savePostit","data","postit_id","updatePostit","then","response","console","log","catch","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PostitsDataService from \"../services/show-postits\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst EditPostit = (props) => {\r\n\r\n  let initialPostitStateId= \"\";\r\n  let initialPostitStateTitle = \"\";\r\n  let initialPostitStateContent = \"\";\r\n  let initialPostitStateDeadline = \"\";\r\n\r\n  if (props.location.state && props.location.state.currentPostit) {\r\n    initialPostitStateId= props.location.state.currentPostit._id\r\n    initialPostitStateTitle = props.location.state.currentPostit.title;\r\n    initialPostitStateContent = props.location.state.currentPostit.content;\r\n    initialPostitStateDeadline = props.location.state.currentPostit.deadline;\r\n  }\r\n\r\n  const [postitId, setPostitId] = useState(initialPostitStateId);\r\n  const [postitTitle, setPostitTitle] = useState(initialPostitStateTitle);\r\n  const [postitContent, setPostitContent] = useState(initialPostitStateContent);\r\n  const [postitDeadline, setPostitDeadline] = useState(\r\n    initialPostitStateDeadline\r\n  );\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  // const handleInputId = (event) => {\r\n  //   setPostitId(event.target.value);\r\n  // };\r\n  const handleInputTitle = event => {\r\n    setPostitTitle(event.target.value);\r\n  };\r\n  const handleInputContent = event => {\r\n    setPostitContent(event.target.value);\r\n  };\r\n  const handleInputDeadline = event => {\r\n    setPostitDeadline(event.target.value);\r\n  };\r\n\r\n  // const getPostitId = (id) => {\r\n  //   PostitsDataService.get(id)\r\n  //     .then((response) => {\r\n  //       //Getting the data requested from the server and setting them into the client\r\n  //       setPostitId(response.data);\r\n  //       console.log(\"ANY ID ? ====>\" + response.data);\r\n  //       return (response.data);\r\n  //     })\r\n  //     .catch((e) => {\r\n  //       console.log(e);\r\n  //     });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getPostitId(props.match.params.id);\r\n  // }, [props.match.params.id]);\r\n\r\n  const savePostit = () => {\r\n    var data = {\r\n      title: initialPostitStateTitle,\r\n      content: initialPostitStateContent,\r\n      deadline: initialPostitStateDeadline,\r\n    };\r\n\r\n    // data.postit_id = props.state.currentPostit._id;\r\n    //console.log(\"=================>\" + data.postit_id);\r\n\r\n    data.postit_id= props.state.currentPostit.postit_id;\r\n    PostitsDataService.updatePostit(data)\r\n      .then((response) => {\r\n        setSubmitted(true);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"submit-form\">\r\n      {submitted ? (\r\n        <div>\r\n          <h4>You submitted successfully!</h4>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"description\"></label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              required\r\n              value={postitTitle}\r\n              onChange={handleInputTitle}\r\n              name=\"text\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"content\"\r\n              required\r\n              value={postitContent}\r\n              onChange={handleInputContent}\r\n              name=\"content\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"deadline\"\r\n              required\r\n              value={postitDeadline}\r\n              onChange={handleInputDeadline}\r\n              name=\"deadline\"\r\n            />\r\n          </div>\r\n          <Link to=\"/\" className=\"btn btn-success\">\r\n            <button onClick={savePostit} className=\"btn btn-success\" to=\"/\">\r\n              Submit\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPostit;\r\n"]},"metadata":{},"sourceType":"module"}